name: backend ci

on:
  push:
    branches:
      - 'main'

jobs:
  python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/linter-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install pip-tools
          pip-sync backend/linter-requirements.txt
      - name: Formatting using black
        run: black backend
      - name: Black lint check
        run: black --check --diff backend
      - name: Security vulnerability scan
        run: |
          pip install safety
          safety check -r backend/linter-requirements.txt

  docker:
    needs: [python]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.TEST_USERNAME }}
          password: ${{ secrets.TEST }}
      - name: Build and push with cache
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: hcachon/devops-backend:${{ github.sha }}
          cache-from: type=registry,ref=hcachon/devops-backend:cache
          cache-to: type=inline

  kubernetes-deploy:
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Configure Kubectl
        run: |
          echo "${{ secrets.KUBERNETES_CONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          kubectl config use-context admin@k8s-esgi-devops
          kubectl version --client
          kubectl config view
          kubectl cluster-info
          sed -i 's/\${IMAGE_VERSION}/${{ github.sha }}/' backend/kube/deployment.yaml
          kubectl apply -f backend/kube/deployment.yaml
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/backend-deployment -n esgi-hugo-4al1
